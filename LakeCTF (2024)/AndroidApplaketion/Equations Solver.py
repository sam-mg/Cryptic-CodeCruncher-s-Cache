from z3 import * 

equation_solver = Solver()
text = [BitVec(f'text[{i}]', 8) for i in range(63)]

equation_solver.add(text[1] - (text[53] + text[24]) == -125)
equation_solver.add(text[1] + text[16] + text[23] == 232)
equation_solver.add(text[46] - (text[52] + text[11]) == -5)
equation_solver.add((text[60] ^ (text[24] ^ text[26])) == 18)
equation_solver.add(text[1] - (text[26] + text[61]) == -59)
equation_solver.add((text[12] ^ (text[9] ^ text[37])) == 105)
equation_solver.add(text[46] + text[21] + text[15] == 260)
equation_solver.add(text[62] - (text[43] + text[52]) == 27)
equation_solver.add(text[10] - (text[48] + text[62]) == -130)
equation_solver.add(text[21] - (text[20] + text[10]) == -53)
equation_solver.add((text[36] ^ (text[15] ^ text[14])) == 22)
equation_solver.add(text[33] - (text[57] + text[36]) == -112)
equation_solver.add(text[52] - (text[47] + text[0]) == -129)
equation_solver.add((text[4] ^ (text[36] ^ text[17])) == 61)
equation_solver.add(text[30] + text[31] + text[48] == 351)
equation_solver.add((text[58] ^ (text[34] ^ text[6])) == 92)
equation_solver.add(text[27] - (text[53] + text[46]) == -141)
equation_solver.add((text[41] ^ (text[36] ^ text[22])) == 119)
equation_solver.add((text[17] ^ (text[41] ^ text[33])) == 29)
equation_solver.add(text[41] - (text[36] + text[15]) == -75)
equation_solver.add((text[24] ^ (text[52] ^ text[50])) == 21)
equation_solver.add(text[39] - (text[14] + text[55]) == -20)
equation_solver.add((text[39] ^ (text[55] ^ text[31])) == 50)
equation_solver.add((text[19] ^ (text[4] ^ text[54])) == 76)
equation_solver.add(text[25] - (text[31] + text[10]) == -137)
equation_solver.add(text[29] - (text[56] + text[35]) == -151)
equation_solver.add((text[16] ^ (text[60] ^ text[20])) == 100)
equation_solver.add((text[54] ^ (text[48] ^ text[2])) == 124)
equation_solver.add(text[15] + text[3] + text[27] == 176)
equation_solver.add(text[51] - (text[43] + text[17]) == -20)
equation_solver.add((text[47] ^ (text[27] ^ text[39])) == 46)
equation_solver.add((text[13] ^ (text[2] ^ text[25])) == 70)
equation_solver.add((text[52] ^ (text[45] ^ text[1])) == 13)
equation_solver.add(text[5] + text[13] + text[59] == 280)
equation_solver.add(text[26] - (text[42] + text[37]) == -147)
equation_solver.add(text[43] - (text[12] + text[16]) == -168)
equation_solver.add(text[27] + text[29] + text[35] == 196)
equation_solver.add(text[49] + text[27] + text[38] == 195)
equation_solver.add(text[14] - (text[9] + text[55]) == -85)
equation_solver.add((text[1] ^ (text[25] ^ text[7])) == 104)
equation_solver.add(text[12] + text[59] + text[28] == 315)
equation_solver.add(text[28] - (text[3] + text[42]) == -97)
equation_solver.add(text[52] - (text[1] + text[55]) == -83)
equation_solver.add((text[28] ^ (text[23] ^ text[36])) == 36)
equation_solver.add(text[41] - (text[1] + text[58]) == -80)
equation_solver.add(text[57] + text[26] + text[36] == 303)
equation_solver.add(text[53] + text[27] + text[59] == 247)
equation_solver.add(text[37] + text[48] + text[4] == 348)
equation_solver.add(text[12] - (text[21] + text[42]) == -119)
equation_solver.add(text[21] - (text[2] + text[43]) == -5)
equation_solver.add(text[6] + text[58] + text[54] == 213)
equation_solver.add(text[11] - (text[29] + text[51]) == -79)
equation_solver.add(text[28] + text[9] + text[55] == 265)
equation_solver.add(text[49] + text[4] + text[35] == 313)
equation_solver.add(text[53] + text[6] + text[38] == 197)
equation_solver.add((text[52] ^ (text[1] ^ text[9])) == 18)
equation_solver.add(text[12] - (text[8] + text[47]) == -44)
equation_solver.add(text[5] - (text[55] + text[25]) == -65)
equation_solver.add((text[52] ^ (text[47] ^ text[39])) == 46)
equation_solver.add(text[60] + text[27] + text[3] == 173)
equation_solver.add((text[11] ^ (text[19] ^ text[26])) == 11)
equation_solver.add(text[17] + text[27] + text[22] == 193)
equation_solver.add(text[26] - (text[54] + text[24]) == -101)
equation_solver.add(text[61] - (text[45] + text[53]) == -140)
equation_solver.add(text[22] + text[29] + text[5] == 229)
equation_solver.add(text[18] - (text[40] + text[47]) == -45)
equation_solver.add((text[61] ^ (text[45] ^ text[26])) == 31)
equation_solver.add(text[14] + text[40] + text[3] == 209)
equation_solver.add(text[49] - (text[5] + text[23]) == -36)
equation_solver.add(text[20] - (text[44] + text[57]) == -165)
equation_solver.add(text[59] + text[22] + text[61] == 261)
equation_solver.add(text[17] + text[46] + text[33] == 259)
equation_solver.add((text[58] ^ (text[10] ^ text[62])) == 86)
equation_solver.add(text[15] - (text[14] + text[41]) == -126)
equation_solver.add(text[59] - (text[58] + text[42]) == -111)
equation_solver.add((text[53] ^ (text[46] ^ text[5])) == 82)
equation_solver.add(text[24] + text[14] + text[16] == 295)
equation_solver.add((text[32] ^ (text[38] ^ text[0])) == 88)
equation_solver.add((text[37] ^ (text[20] ^ text[31])) == 47)
equation_solver.add(text[29] + text[48] + text[53] == 268)

equation_solver.check()
model = equation_solver.model()
flag = bytes(model[text[i]].as_long() for i in range(len(text)))
print(flag.decode())